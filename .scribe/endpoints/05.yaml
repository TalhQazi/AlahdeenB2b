name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/token
    metadata:
      title: 'Auth Token'
      description: |-
        This controller provides a token for mobile apps or frontend website
        It can also be used to access the API via a GUI
        Insomnia or Postman are two examples of GUI's
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: test@gmail.com
        type: string
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: '12345678'
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: Registration
      description: 'Store a newly created resource in storage.'
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: deserunt
        type: string
      email:
        name: email
        description: ''
        required: false
        example: test@alahdeen.com
        type: string
      phone_full:
        name: phone_full
        description: ''
        required: true
        example: '+923004513000'
        type: string
      password:
        name: password
        description: 'Atleast 8 characters long'
        required: true
        example: '12345678'
        type: string
      city_id:
        name: city_id
        description: ''
        required: true
        example: 1
        type: integer
      account_type:
        name: account_type
        description: 'This can be 1-6'
        required: true
        example: 5
        type: integer
      address:
        name: address
        description: 'Will be required if account_type is set to 3 and shouldn''t be greater then 255 characters'
        required: false
        example: harum
        type: string
      industry:
        name: industry
        description: 'Will be required if account_type is set to 2 and shouldn''t be greater then 255 characters'
        required: false
        example: fugit
        type: string
      job_freelance:
        name: job_freelance
        description: 'Will be required if account_type is set to 3 and shouldn''t be greater then 255 characters'
        required: false
        example: tenetur
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/home_page_category
    metadata:
      title: 'Home Page Categories'
      description: |-
        Get categories list according to display section if specifed otherwise return 6 categories by default
        or according to the limit parameter
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      display_section:
        name: display_section
        description: 'For now it is top bar or middle section'
        required: false
        example: 'top bar'
        type: string
      limit:
        name: limit
        description: 'Number of categories required, default is set to 6'
        required: false
        example: 5
        type: integer
      load_subcategory:
        name: load_subcategory
        description: 'Optional parameter to specifiy whether to load or not sub categories of the categories fetched'
        required: false
        example: 1
        type: integer
      sub_limit:
        name: sub_limit
        description: 'To specifiy the number of subcategories to be fetched against each category default is set to 5'
        required: false
        example: 3
        type: integer
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"status":"Success","message":null,"data":{"categories":[{"id":2,"title":"Medical Equipments","image_path":"\/storage\/category\/images\/nWdEiFceW441ohd1p9sduIN4CYZOk8Rq5ERyuNsT.jpg","level":1,"bread_crumb":null,"created_at":"2021-06-02 10:55 am","deleted_at":null,"sub_categories":{"data":[{"id":5,"title":"Masks","image_path":"\/storage\/category\/images\/KMnQxW91bxwQUYLOSWHjfuSqK9423eqQoKBDKf0y.jpg","level":1,"bread_crumb":null,"created_at":"2021-06-02 11:21 am","deleted_at":null}]}},{"id":1,"title":"Electronics","image_path":"\/storage\/category\/images\/lDKFminDbOxdMTEJleqSNaRkuIvjQARDJVu7FIRC.jpg","level":1,"bread_crumb":null,"created_at":"2021-06-02 10:55 am","deleted_at":null,"sub_categories":{"data":[{"id":3,"title":"Computers","image_path":"\/storage\/category\/images\/If0xelTk30an0yGQc9FgeIF9Oo0jvqjDkF7DOLXm.jpg","level":2,"bread_crumb":";1;","created_at":"2021-06-02 10:55 am","deleted_at":null},{"id":4,"title":"Mobiles","image_path":"\/storage\/category\/images\/hyh6eSI0I7PwA0OpKO7nhoE3bxAHdwGOQmo5RnpL.jpg","level":2,"bread_crumb":";1;","created_at":"2021-06-02 10:55 am","deleted_at":null}]}},{"id":7,"title":"Apparel","image_path":"\/storage\/category\/images\/pHemwMZ8htnv399VMkeTDcdcCwR2zdj3fh5zWVBz.jpg","level":1,"bread_crumb":null,"created_at":"2021-06-02 11:25 am","deleted_at":null,"sub_categories":{"data":[{"id":8,"title":"Men Clothes","image_path":"\/storage\/category\/images\/OZqTixQOodyBjf9uI7wIRCr2tX0c5NiLGCg7MLwe.jpg","level":2,"bread_crumb":";7;","created_at":"2021-06-02 11:31 am","deleted_at":null}]}}]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '30'
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/contact-us
    metadata:
      title: 'Contact Us'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      purpose:
        name: purpose
        description: 'Specify the purpose of contacting.'
        required: true
        example: 'Issue with regards to payment'
        type: string
      subject:
        name: subject
        description: ''
        required: true
        example: 'Payment Issue'
        type: string
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: 'Shahid Iqbal'
        type: string
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: shahid.iqbal@cmail.com
        type: string
      phone_full:
        name: phone_full
        description: 'The phone number of the user.'
        required: true
        example: '+923224789800'
        type: string
      message:
        name: message
        description: 'The message to be conveyed and should be atleast 50 characters long'
        required: true
        example: 'Lorem Ipsum has been the industry''s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.'
        type: string
      g-recaptcha-response:
        name: g-recaptcha-response
        description: ''
        required: true
        example: y5SadL
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/business-types
    metadata:
      title: 'List of all business types available in the system'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"status":"Success","message":null,"data":{"business_types":[{"id":1,"business_type":"Manufacturer"},{"id":2,"business_type":"Exporter"},{"id":3,"business_type":"Importer"},{"id":4,"business_type":"Distributor"},{"id":5,"business_type":"Supplier"},{"id":6,"business_type":"Trader"},{"id":7,"business_type":"Wholesaler"},{"id":8,"business_type":"Retailer"},{"id":9,"business_type":"Dealer"},{"id":10,"business_type":"Fabricator"},{"id":11,"business_type":"Producer"},{"id":12,"business_type":"Service Provider"}]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '14'
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/files/image
    metadata:
      title: 'Upload Images'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      uploads:
        name: uploads
        description: 'Must not be greater than 500 characters.'
        required: true
        example:
          - akummgiazqpduwgzsqwpwewyrgolmrqdbrgsfgviguibnqcyhgixvtszchpwdgfydfjilxyisogjrwfrujtfglauiabnecrnhzqbvohuzhwcybanhxtvxwoaywwktvecbofjofvyxzpefgwnbmfvgdskzrkjovhqtqzhvluegwzjmnwzejggnfcdrjstnogewtnlxdwwswtolvdisyabuxkjotuyrqhfdjhfrfnmfstilalmhddqaoshgzogxsihvxdaaxogxtffxbygtswjwqkcskzimftihzmzhetedyghlorpmzuiihtgpobpi
        type: 'string[]'
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/files/document
    metadata:
      title: 'Upload Files'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      uploads:
        name: uploads
        description: 'Must not be greater than 500 characters.'
        required: true
        example:
          - gczkxvqamdnfweylyonwxaofxbuoclcimlinqzvrnjhqeappbfqwuutiyjsxgurbvenafnblhaxoozqdcptdwctgjxxljsspkldvnwcgnsvtjqgkoefhmyldfsqceenaaowrkabcjtqchldnlfbhxroqqgidnusybtkzvgcuhqvdfjobmgaltehfqzpwonewltuyeeoilqcdthxnuzvxdia
        type: 'string[]'
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      title: 'Logged in user details'
      description: 'Get logged in user details'
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/chat-notifications
    metadata:
      title: 'Get Chat Notifications for logged in user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/contact-supplier
    metadata:
      title: 'Contact Seller'
      description: 'Send request for quotation against a specific product'
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      product_id:
        name: product_id
        description: 'The product against which the buyer wants quotation.'
        required: true
        example: 1
        type: integer
      budget:
        name: budget
        description: 'Buyer''s budget.'
        required: true
        example: !!float 2500
        type: number
      quantity:
        name: quantity
        description: 'Quantity required.'
        required: true
        example: !!float 5
        type: number
      unit:
        name: unit
        description: 'Unit: pieces, kg etc.'
        required: true
        example: pieces
        type: string
      requirements:
        name: requirements
        description: 'Buyer requirements if any.'
        required: false
        example: perspiciatis
        type: string
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/{fallbackPlaceholder}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      fallbackPlaceholder:
        name: fallbackPlaceholder
        description: ''
        required: true
        example: 2gW
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 404
        content: '{"status":"Error","message":"Resource Not Found. If error persist please contact our support team.","data":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '10'
          vary: Origin
        description: null
    responseFields: []
